<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LSMTree on Ethereal</title>
    <link>https://ddeka0.github.io/tags/lsmtree/</link>
    <description>Recent content in LSMTree on Ethereal</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>debashishdekanits2015@gmail.com (Debashish Deka)</managingEditor>
    <webMaster>debashishdekanits2015@gmail.com (Debashish Deka)</webMaster>
    <lastBuildDate>Sat, 25 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ddeka0.github.io/tags/lsmtree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Deep Dive into the LSM Tree #1</title>
      <link>https://ddeka0.github.io/post/2024-05-25-leveldb-code-reading/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><author>debashishdekanits2015@gmail.com (Debashish Deka)</author>
      <guid>https://ddeka0.github.io/post/2024-05-25-leveldb-code-reading/</guid>
      <description>I&amp;rsquo;ve been reading about LSM trees for a while but never really dived into any implementation. I thought of starting with an existing codebase. RocksDB came to mind since I&amp;rsquo;ve used it before at work, but its codebase is quite large. So, I decided to start with LevelDB, which has a much smaller codebase and, at first glance, looks more straightforward to understand.&#xA;Before I delve into LevelDB, here&amp;rsquo;s a brief introduction to LSM trees.</description>
    </item>
  </channel>
</rss>
